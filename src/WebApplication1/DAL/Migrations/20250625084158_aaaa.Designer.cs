// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Others;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250625084158_aaaa")]
    partial class aaaa
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Others.CompanyClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("KrsNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("KrsNumber")
                        .IsUnique();

                    b.ToTable("CompanyClient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ul. Długa 1, 00-001 Warszawa",
                            CompanyName = "TechCorp Solutions Sp. z o.o.",
                            Email = "kontakt@techcorp.pl",
                            KrsNumber = "1234567890",
                            PhoneNumber = "+48111222333"
                        },
                        new
                        {
                            Id = 2,
                            Address = "ul. Krótka 5, 31-001 Kraków",
                            CompanyName = "Innovation Systems S.A.",
                            Email = "info@innovationsystems.pl",
                            KrsNumber = "2345678901",
                            PhoneNumber = "+48222333444"
                        },
                        new
                        {
                            Id = 3,
                            Address = "ul. Morska 15, 81-001 Gdynia",
                            CompanyName = "Digital Future Ltd.",
                            Email = "contact@digitalfuture.com",
                            KrsNumber = "3456789012",
                            PhoneNumber = "+48333444555"
                        });
                });

            modelBuilder.Entity("WebApplication1.Others.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AppliedDiscountAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("AppliedDiscountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("AppliedDiscountPercentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("BasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ClientType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FinalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsReturningClientDiscountApplied")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ReturningClientDiscountAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoftwareSystemId")
                        .HasColumnType("int");

                    b.Property<string>("SoftwareVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupportYears")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppliedDiscountId");

                    b.HasIndex("SoftwareSystemId");

                    b.ToTable("Contract");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppliedDiscountAmount = 599.99m,
                            AppliedDiscountId = 1,
                            AppliedDiscountPercentage = 15.0m,
                            BasePrice = 3999.99m,
                            ClientId = 1,
                            ClientType = "individual",
                            EndDate = new DateTime(2025, 7, 15, 10, 41, 58, 655, DateTimeKind.Local).AddTicks(4610),
                            FinalPrice = 3059.99m,
                            IsReturningClientDiscountApplied = true,
                            ReturningClientDiscountAmount = 170.0m,
                            SoftwareSystemId = 1,
                            SoftwareVersion = "2.1.0",
                            StartDate = new DateTime(2025, 6, 30, 10, 41, 58, 655, DateTimeKind.Local).AddTicks(4610),
                            Status = 1,
                            SupportYears = 2
                        },
                        new
                        {
                            Id = 2,
                            AppliedDiscountAmount = 50.0m,
                            AppliedDiscountId = 2,
                            AppliedDiscountPercentage = 25.0m,
                            BasePrice = 199.99m,
                            ClientId = 1,
                            ClientType = "company",
                            EndDate = new DateTime(2025, 7, 7, 10, 41, 58, 655, DateTimeKind.Local).AddTicks(4610),
                            FinalPrice = 149.99m,
                            IsReturningClientDiscountApplied = false,
                            SoftwareSystemId = 2,
                            SoftwareVersion = "1.8.5",
                            StartDate = new DateTime(2025, 6, 27, 10, 41, 58, 655, DateTimeKind.Local).AddTicks(4610),
                            Status = 0,
                            SupportYears = 1
                        },
                        new
                        {
                            Id = 3,
                            AppliedDiscountAmount = 699.99m,
                            AppliedDiscountId = 3,
                            AppliedDiscountPercentage = 10.0m,
                            BasePrice = 6999.99m,
                            ClientId = 2,
                            ClientType = "individual",
                            EndDate = new DateTime(2025, 7, 25, 10, 41, 58, 655, DateTimeKind.Local).AddTicks(4610),
                            FinalPrice = 5994.99m,
                            IsReturningClientDiscountApplied = true,
                            ReturningClientDiscountAmount = 315.0m,
                            SoftwareSystemId = 3,
                            SoftwareVersion = "3.2.1",
                            StartDate = new DateTime(2025, 7, 2, 10, 41, 58, 655, DateTimeKind.Local).AddTicks(4610),
                            Status = 0,
                            SupportYears = 3
                        },
                        new
                        {
                            Id = 4,
                            AppliedDiscountAmount = 449.99m,
                            AppliedDiscountId = 1,
                            AppliedDiscountPercentage = 15.0m,
                            BasePrice = 2999.99m,
                            ClientId = 3,
                            ClientType = "individual",
                            EndDate = new DateTime(2025, 6, 23, 10, 41, 58, 655, DateTimeKind.Local).AddTicks(4610),
                            FinalPrice = 2549.99m,
                            IsReturningClientDiscountApplied = false,
                            SoftwareSystemId = 1,
                            SoftwareVersion = "2.1.0",
                            StartDate = new DateTime(2025, 6, 15, 10, 41, 58, 655, DateTimeKind.Local).AddTicks(4610),
                            Status = 0,
                            SupportYears = 1
                        });
                });

            modelBuilder.Entity("WebApplication1.Others.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("DiscountType")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PercentageValue")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int?>("SoftwareSystemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SoftwareSystemId");

                    b.ToTable("Discount");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Special discount for new customers",
                            DiscountType = 1,
                            EndDate = new DateTime(2025, 12, 25, 10, 41, 58, 655, DateTimeKind.Local).AddTicks(4610),
                            IsActive = true,
                            Name = "Spring Promotion",
                            PercentageValue = 15.0m,
                            SoftwareSystemId = 1,
                            StartDate = new DateTime(2025, 5, 26, 10, 41, 58, 655, DateTimeKind.Local).AddTicks(4610)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Special pricing for educational institutions",
                            DiscountType = 1,
                            EndDate = new DateTime(2026, 6, 25, 10, 41, 58, 655, DateTimeKind.Local).AddTicks(4610),
                            IsActive = true,
                            Name = "Education Discount",
                            PercentageValue = 25.0m,
                            SoftwareSystemId = 2,
                            StartDate = new DateTime(2025, 4, 26, 10, 41, 58, 655, DateTimeKind.Local).AddTicks(4610)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Volume discount for large enterprises",
                            DiscountType = 1,
                            EndDate = new DateTime(2026, 3, 25, 10, 41, 58, 655, DateTimeKind.Local).AddTicks(4610),
                            IsActive = true,
                            Name = "Enterprise Deal",
                            PercentageValue = 10.0m,
                            SoftwareSystemId = 3,
                            StartDate = new DateTime(2025, 6, 10, 10, 41, 58, 655, DateTimeKind.Local).AddTicks(4610)
                        });
                });

            modelBuilder.Entity("WebApplication1.Others.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "0192023a7bbd73250516f069df18b500",
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            Login = "john.doe",
                            Password = "482c811da5d5b4bc6d497ffa98491e38",
                            Role = 0
                        },
                        new
                        {
                            Id = 3,
                            Login = "jane.smith",
                            Password = "482c811da5d5b4bc6d497ffa98491e38",
                            Role = 0
                        });
                });

            modelBuilder.Entity("WebApplication1.Others.IndividualClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Pesel")
                        .IsUnique();

                    b.ToTable("IndividualClient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ul. Marszałkowska 123, 00-001 Warszawa",
                            Email = "jan.kowalski@email.com",
                            FirstName = "Jan",
                            IsDeleted = false,
                            LastName = "Kowalski",
                            Pesel = "80010112345",
                            PhoneNumber = "+48123456789"
                        },
                        new
                        {
                            Id = 2,
                            Address = "ul. Krakowska 456, 31-001 Kraków",
                            Email = "anna.nowak@email.com",
                            FirstName = "Anna",
                            IsDeleted = false,
                            LastName = "Nowak",
                            Pesel = "85051567890",
                            PhoneNumber = "+48987654321"
                        },
                        new
                        {
                            Id = 3,
                            Address = "ul. Gdańska 789, 80-001 Gdańsk",
                            Email = "piotr.wisniewski@email.com",
                            FirstName = "Piotr",
                            IsDeleted = false,
                            LastName = "Wiśniewski",
                            Pesel = "90030398765",
                            PhoneNumber = "+48555666777"
                        });
                });

            modelBuilder.Entity("WebApplication1.Others.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Payment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1500.00m,
                            ContractId = 1,
                            PaymentMethod = "Credit Card",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1559.99m,
                            ContractId = 1,
                            PaymentMethod = "Bank Transfer",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 75.00m,
                            ContractId = 2,
                            PaymentMethod = "Credit Card",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 2000.00m,
                            ContractId = 3,
                            PaymentMethod = "Bank Transfer",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Amount = 1000.00m,
                            ContractId = 4,
                            PaymentMethod = "Credit Card",
                            Status = 1
                        });
                });

            modelBuilder.Entity("WebApplication1.Others.SoftwareSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PricingType")
                        .HasColumnType("int");

                    b.Property<decimal?>("SubscriptionPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UpfrontPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SoftwareSystem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Finances",
                            CurrentVersion = "2.1.0",
                            Description = "Advanced financial reporting and analytics platform",
                            Name = "Financial Analytics Pro",
                            PricingType = 2,
                            SubscriptionPrice = 299.99m,
                            UpfrontPrice = 2999.99m
                        },
                        new
                        {
                            Id = 2,
                            Category = "Education",
                            CurrentVersion = "1.8.5",
                            Description = "Comprehensive learning management system",
                            Name = "EduTech Learning Platform",
                            PricingType = 0,
                            SubscriptionPrice = 199.99m
                        },
                        new
                        {
                            Id = 3,
                            Category = "Business",
                            CurrentVersion = "3.2.1",
                            Description = "Customer relationship management system",
                            Name = "CRM Business Suite",
                            PricingType = 1,
                            UpfrontPrice = 4999.99m
                        });
                });

            modelBuilder.Entity("WebApplication1.Others.Contract", b =>
                {
                    b.HasOne("WebApplication1.Others.Discount", "AppliedDiscount")
                        .WithMany()
                        .HasForeignKey("AppliedDiscountId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WebApplication1.Others.SoftwareSystem", "SoftwareSystem")
                        .WithMany()
                        .HasForeignKey("SoftwareSystemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppliedDiscount");

                    b.Navigation("SoftwareSystem");
                });

            modelBuilder.Entity("WebApplication1.Others.Discount", b =>
                {
                    b.HasOne("WebApplication1.Others.SoftwareSystem", "SoftwareSystem")
                        .WithMany()
                        .HasForeignKey("SoftwareSystemId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("SoftwareSystem");
                });

            modelBuilder.Entity("WebApplication1.Others.Payment", b =>
                {
                    b.HasOne("WebApplication1.Others.Contract", "Contract")
                        .WithMany("Payments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("WebApplication1.Others.Contract", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
